name: Build Plugin

on: [push]

permissions:
  contents: write  # Ajoute les permissions pour créer des releases

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission to Gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build --stacktrace --info

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: SuperWatch  # Upload du .jar sans le compresser en ZIP
          path: ./app/build/libs/SuperWatch*.jar
          if-no-files-found: error  # Empêche l'upload si le fichier n'existe pas
          retention-days: 7  # Garde le fichier pendant 7 jours

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.event.head_commit.message, '[release]')  # Se lance uniquement si le commit commence par "[release]"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: SuperWatch.jar  # Télécharge le fichier JAR directement
          path: .

      - name: Get current date
        id: date
        run: echo "tag_name=$(date +'%Y-%m-%d-%H%M%S')" >> $GITHUB_ENV  # Génère un tag basé sur la date

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.tag_name }}
          name: Release ${{ env.tag_name }}
          body: "Nouvelle release générée automatiquement."
          draft: false
          prerelease: false
          files: ./app/build/libs/SuperWatch*.jar  # Upload directement le JAR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
